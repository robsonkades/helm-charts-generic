appConfig:
  name: demo-app
  annotations: 
    type: app
    name: demo
    team: engineer

container:
  enabled: true
  replicaCount: 1
  securityContext: {}
  podSecurityContext: {}
  port: 80
  volume: /data
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80
  heathcheck:
    enable: false
    livenessProbe: /
    readinessProbe: /
  type: NodePort
  # command:
  #   - /etc/bin/bash
  # args:
  #   - /etc/bin/bash
  resources: 
    requests:
      memory: "100Mi"
    limits:
      memory: "200Mi"

volume:
  enable: true
  name: demo
  claimName: demo-claim
  storageClassName: local-path
  resources: 
    requests:
      storage: 2Gi
  accessModes: 
    - ReadWriteOnce

jobs:
  enabled: true
  schedule: "* * * * *"
  startingDeadline: 10
  concurrencyPolicy: 'Forbid'
  securityContext: {}
  podSecurityContext: {}
  volume: /data
  restartPolicy: OnFailure
  resources: 
    requests:
      memory: "100Mi"
    limits:
      memory: "200Mi"
  command:
    - /bin/sh
    - -c
    - date; echo Hello from the Kubernetes cluster
  # args:
  #   - /etc/bin/bash

image:
  repository: nginx
  pullPolicy: IfNotPresent
  imagePullSecrets: {}
  tag: latest

serviceAccount:
  enabled: true
  annotations: {}
  name: demo

ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

env:
  configMap:
    - name: ''
      value: ''
  secret:
    - name: ''
      value: ''
  shared:
    - name: ''
      valeu: ''


